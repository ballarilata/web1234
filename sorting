#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct SLL
{
	int info;
	struct SLL *next;
};
typedef struct SLL node;
node *start=NULL,*s1=NULL, *s2=NULL;

node *getnode_SLL()
{
	node *p;
	p=(node*)malloc(sizeof(node));
	scanf("%d",&p->info);
	p->next=NULL;
	return p;
}

void insert_front()
{
	node *new1;
	printf("Enter the information:");
	new1=getnode_SLL();
	if(start==NULL)
	{
		start=new1;
		return;
	}
	new1->next=start;
	start=new1;
}

void Reverse_SLL()
{
	node *temp,*prev=NULL;
	if(start==NULL)
	{
		printf("List is Empty\n");
		return;
	}
	while(start!=NULL)
	{
		temp=start;
		start=start->next;
		temp->next=prev;
		prev=temp;
	}
	start=temp;
}


void sort_list()
{
	node *current=start, *index;
	int temp;  
	while(current != NULL)
	   {  
                 
            index = current->next;  
                  
            while(index != NULL)
				{  
                    
                    if(current->info > index->info) 
					{  
                        temp = current->info;  
                        current->info = index->info;  
                        index->info = temp;  
                    }  
                    index = index->next;  
                }  
                current = current->next;  
        }  
}

void display()
{
	int cnt=0;
	node *temp;
	if(start==NULL)
	{
		printf("List is Empty\n");
		return;
	}
	temp=start;
	while(temp!=NULL)
	{
		printf("%d\t",temp->info);
		cnt++;
		temp=temp->next;
	}
	printf("The total nodes in the list is %d\n",cnt);
}


void concatenate(node *s1,node *s2)
{
    if(s1==NULL)
    {
        start=s2;
        return;
    }
    node *temp=s1;
        while(temp->next!=NULL)
            temp=temp->next;
            
        temp->next=s2;
    
}


int main()
{
    node *n1,*n2,*temp;
    int ch, n,i;
	while(1)
	{
		printf("\nEnter the choice:\n 1.insert_front\n 2.Reverse_SLL\n 3.display\n 4.sort_list\n 5.concatenate_two list\n 6.exit\n");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:insert_front();
			       break;
			case 2:Reverse_SLL();
			       break;
			case 3:display();
			       break;
			case 4:sort_list();
			       break;
		    case 5: printf ("number of elements -> :");
                    scanf("%d",&n);
    
                    printf ("Enter %d elements for LIST 1:\n", n);
                    for(i=0;i<n;i++)
                     {
                	   	n1=getnode_SLL();
                		n1->next=s1;
                		s1=n1;
                	}
                	 printf ("number of elements -> :");
                     scanf("%d",&n);
                   
                    printf ("Enter %d elements for LIST 2:\n", n);    
                    for(i=0;i<n;i++)
                     {
                	   	n2=getnode_SLL();
                		n2->next=s2;
                		s2=n2;
                	}
                   
                    concatenate(s1,s2);
                    temp=s1;
                    while(temp!=NULL)
                    {
                      printf("%d  ",temp->info);
                      temp=temp->next;
                    }
                    break;
			case 6:exit(0);
			       break;
			default:printf("Invalid key Entered\n");
		}
	}
	return 0;
}
